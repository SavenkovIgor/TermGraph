{
    "name": "Information technologies",
    "terms": [
        {
            "definition": "сведения о чем либо, независимо от формы их представления",
            "term": "Информация"
        },
        {
            "definition": "{информация}, представленная в формализованном (структурированном) виде, пригодном для передачи, связи или обработки.",
            "term": "Данные"
        },
        {
            "definition": "физическое устройство для хранения {данных}, используемых в процессе вычисления. Условно представимо в виде длинной цепочки {байт}",
            "term": "Компьютерная память"
        },
        {
            "definition": "минимальная единица {компьютерной памяти}, к которой можно обратиться индивидуально. Размер ячейки обычно устанавливается в 1 {байт}.",
            "term": "Ячейка памяти"
        },
        {
            "definition": "номер, который взаимно однозначно сопоставлен с какой либо {ячейкой памяти}",
            "term": "Адрес ячейки памяти"
        },
        {
            "definition": "минимально возможная единица хранения {данных}. Может иметь только 2 возможных, взаимоисключающих значения - 0 или 1",
            "term": "Бит"
        },
        {
            "definition": "единица хранения информации, совокупность битов, обрабатываемых компьютером одновременно. В современных системах байт состоит из 8 {бит} и может принимать 256 разных значений.",
            "term": "Байт"
        },
        {
            "definition": "набор соглашений о {данных}, который определяет множество допустимых значений для данных и допустимые для них операции",
            "term": "Тип данных"
        },
        {
            "definition": "{компьютерная память}, в которой доступ к любой {ячейке памяти}  осуществляется за равные промежутки времени.",
            "term": "Память с произвольным доступом"
        },
        {
            "definition": "{компьютерная память}, в которой время получения доступа к {ячейке памяти} зависит от общих размеров памяти, и не осуществляется за равные промежутки времени",
            "term": "Память с последовательным доступом"
        },
        {
            "definition": "энергозависимая {компьютерная память} {произвольного доступа} в которой хранятся исходные данные, промежуточные результаты вычислений и программные инструкции",
            "term": "Оперативная память"
        },
        {
            "definition": "блок {ячеек памяти} образующий сверхбыструю {оперативную память}  внутри процессора. Они как правило малого размера (несколько {байт}).",
            "description": "Каждый регистр обычно используется строго определенным образом в процессе вычислений. Переделать структуру связей!",
            "term": "Регистр процессора"
        },
        {
            "definition": "сигнал от {программного обеспечения} или {аппаратного обеспечения}, сообщающий {процессору} о наступлении события, требующего немедленной реакции.",
            "term": "Прерывание"
        },
        {
            "definition": "",
            "term": "Обработчик прерываний"
        },
        {
            "definition": "ошибка возникающая в процессе выполнения {алгоритма} и делающая невозможным (бессмысленным) дальнейший процесс вычислений.",
            "term": "Исключение"
        },
        {
            "definition": "формальное описание последовательности {операций} (действий) исполнителя для достижения некоторого результата",
            "term": "Алгоритм"
        },
        {
            "definition": "некоторое действие",
            "term": "Операция"
        },
        {
            "definition": "в широком смысле означает неделимость на более мелкие составляющие",
            "term": "Атомарность"
        },
        {
            "definition": "непрерываемая операция - это {операция} обладающая свойством {атомарности}, т.е. операция которая либо будет выполнена целиком и полностью, либо не будет выполнена вообще.",
            "term": "Атомарная операция"
        },
        {
            "definition": "чаще всего непустое конечное {множество} различных {символов}",
            "term": "Алфавит"
        },
        {
            "definition": "{тип данных}, предоставляемый {языком программирования} как базовая единица самого языка.",
            "term": "Примитивный тип данных"
        },
        {
            "definition": "{интегральная схема}, исполняющая {машинные инструкции} (программный код), главная часть аппаратного обеспечения компьютера или программируемого логического контроллера.",
            "term": "Процессор"
        },
        {
            "definition": "одна отдельная математическая, логическая или управляющая операция со строгой спецификацией, которая может быть выполнена с помощью комбинации электронных {логических элементов}. ",
            "term": "Машинная инструкция"
        },
        {
            "definition": "электронные устройства предназначенные для обработки {данных}, представленных в форме {цифрового сигнала}",
            "term": "Логические элементы"
        },
        {
            "definition": "соглашение о предоставляемых архитектурой средствах программирования, а именно: {типах данных}, {инструкций}, Системы {регистров}, {методов адресации}, {моделей памяти}, способов обработки {прерываний} и {исключений}, методов ввода - вывода.",
            "term": "Система команд"
        },
        {
            "definition": "наименьшая единица обработки информации, исполнение которой может быть назначено ядром операционной системы. ",
            "term": "Поток"
        },
        {
            "definition": "операция исполнения запущенной программы, которая выполняется в текущий момент. ",
            "description": "Так же с этим связано адресное пространство, глобальные переменные, регистры, стек, открытые в данный момент файлы и пр.",
            "term": "Процесс"
        },
        {
            "definition": "физическая константность (определена в языке с++). Означает, что ни один элемент данного объекта не меняется. Гарантируется на этапе компиляции",
            "term": "Побитовая константность"
        },
        {
            "definition": "константность переменных и она не гарантирована в некоторых случаях",
            "term": "Логическая константность"
        },
        {
            "definition": "Утверждение о структуре данных, которое всегда должно быть истинно для этой структуры данных, чтобы эта структура оставалась корректной",
            "term": "Инварианта"
        },
        {
            "definition": "Ситуация, при которой результат работы параллельного алгоритма зависит от порядка выполнения операций",
            "term": "Гонка"
        },
        {
            "definition": "{Гонка} возникающая из за одновременной модификации одних и тех же данных",
            "term": "Гонка за данными"
        },
        {
            "definition": "",
            "term": "Lock free programming"
        },
        {
            "definition": "",
            "term": "Машинное слово"
        },
        {
            "definition": "",
            "term": "Выравнивание памяти"
        },
        {
            "definition": "",
            "term": "Кэш инструкций"
        },
        {
            "definition": "",
            "term": "Кэш данных"
        },
        {
            "definition": "",
            "term": "Буфер ассоциативной трансляции TLB"
        },
        {
            "definition": "Архитектура процессора",
            "term": "8086"
        },
        {
            "definition": "{8086}",
            "term": "14 регистров"
        },
        {
            "definition": "",
            "term": "80186"
        },
        {
            "definition": "",
            "term": "SIMD"
        },
        {
            "definition": "",
            "term": "MIMD"
        },
        {
            "definition": "Подход к программированию ии в играх",
            "term": "Goal oriented action planning"
        },
        {
            "definition": "",
            "term": "Iommu"
        },
        {
            "definition": "Набор инструкций для ускорения фото аудио и видео",
            "term": "Mmx"
        },
        {
            "definition": "Streaming {SIMD} Extensions",
            "term": "SSE"
        },
        {
            "definition": "",
            "term": "SSE2"
        },
        {
            "definition": "",
            "term": "SSE3"
        },
        {
            "definition": "",
            "term": "SSSE3"
        },
        {
            "definition": "",
            "term": "SSE 4.1"
        },
        {
            "definition": "",
            "term": "SSE 4.2"
        },
        {
            "definition": "",
            "term": "SSE4A(SSE128)"
        },
        {
            "definition": "",
            "term": "AES"
        },
        {
            "definition": "",
            "term": "AVX"
        },
        {
            "definition": "",
            "term": "AVX2"
        },
        {
            "definition": "",
            "term": "FMA"
        },
        {
            "definition": "",
            "term": "NX, XD, EVP"
        },
        {
            "definition": "",
            "term": "XOP"
        },
        {
            "definition": "Hyper threading, Simultaneous multi threading",
            "term": "HT, SMT"
        },
        {
            "definition": "",
            "term": "Turbo Boost, Turbo core"
        },
        {
            "definition": "",
            "term": "TXT, MPX, SGX, SMEP, SMAP"
        },
        {
            "definition": "",
            "term": "TSX"
        },
        {
            "definition": "",
            "term": "ACPI"
        },
        {
            "definition": "",
            "term": "BMI, TBM, ABM"
        },
        {
            "definition": "",
            "term": "F16C"
        },
        {
            "definition": "Abstract syntax tree",
            "term": "AST"
        },
        {
            "definition": "модель реального объекта или феномена, ограниченная выбранным контекстном, которая имеет все детали с высокой точностью соответствующие данному контексту, и опускающая остальные детали",
            "term": "Абстракция"
        },
        {
            "definition": "",
            "term": "Полиморфизм"
        },
        {
            "definition": "способность объекта  спрятать часть своего состояния и поведения от других объектов, показывая только ограниченный {интерфейс} остальной {программе}",
            "term": "Инкапсуляция"
        },
        {
            "definition": "Вариант {реализации}, но от {класса}",
            "term": "Наследование"
        },
        {
            "definition": "в определенном смысле фиксированная договоренность способа взаимодействия между объектами каких либо {классов}",
            "term": "Интерфейс"
        },
        {
            "definition": "{Абстрактный тип данных}",
            "term": "Класс"
        },
        {
            "definition": "математическая модель {типа данных}",
            "term": "Абстрактный тип данных"
        },
        {
            "definition": "{Отношение между классами}, при котором один {класс} не может работать без другого",
            "term": "Зависимость"
        },
        {
            "definition": "",
            "term": "Отношение между классами"
        },
        {
            "definition": "вариант {зависимости} при котором один {класс} доступен во всех точках другого {класса}. Отношение один к одному",
            "term": "Ассоциация"
        },
        {
            "definition": "Вид {ассоциации} с отношением {один ко многим} или {многие ко многим}",
            "term": "Агрегация"
        },
        {
            "definition": "вариант {агрегации} с отношением {один ко многим}",
            "term": "Композиция"
        },
        {
            "definition": "вариант {зависимости}, от {интерфейса}",
            "term": "Реализация "
        },
        {
            "definition": "",
            "term": "NLP"
        },
        {
            "definition": "процесс приведения слова к канонической форме. Часть процесса {NLP}",
            "term": "Лемматизация"
        },
        {
            "definition": "",
            "term": "FMA instruction set"
        },
        {
            "definition": "",
            "term": "Интерполяция строк"
        },
        {
            "definition": "",
            "term": "Callback hell"
        },
        {
            "definition": "",
            "term": "Pyramid of doom"
        },
        {
            "definition": "множество {программ}, используемых для {управления} {вычислительным устройством}",
            "term": "Программное обеспечение"
        },
        {
            "definition": "электронные и механические части {вычислительного устройства}",
            "term": "Аппаратное обеспечение"
        },
        {
            "definition": "{система}, способная выполнять какой либо {алгоритм} либо их множество",
            "term": "Вычислительное устройство"
        },
        {
            "definition": "математическое преобразование, позволяющее преобразовывать входящий поток {информации} в выходной, с отличной от первого структурой",
            "term": "Вычисление"
        },
        {
            "definition": "набор {инструкций} и {данных}, позволяющий {аппаратному обеспечению} {вычислительной системы} выполнять {вычисления} или функции {управления}",
            "term": "Программа"
        },
        {
            "definition": "",
            "term": "Управление"
        },
        {
            "definition": "электронный блок либо {интегральная схема}, исполняющая {машинные инструкции}, главная часть {аппаратного обеспечения} {компьютера}",
            "term": "Центральный процессор"
        },
        {
            "definition": "электронное {вычислительное устройство}",
            "term": "Компьютер"
        },
        {
            "definition": "{упорядоченный контейнер}, с {произвольным доступом} к {элементам}",
            "term": "Массив"
        },
        {
            "definition": "{упорядоченный контейнер}, с {последовательным доступом} к {элементам}",
            "term": "Список"
        },
        {
            "definition": "{упорядоченный контейнер}, с {last in first out доступом} к {элементам}",
            "term": "Стек"
        },
        {
            "definition": "",
            "term": "Очередь"
        },
        {
            "definition": "",
            "term": "Кортеж"
        },
        {
            "definition": "",
            "term": "Словарь"
        },
        {
            "definition": "",
            "term": "Строка"
        },
        {
            "definition": "{формальный язык}, предназначенный для записи {программ}",
            "term": "Язык программирования"
        },
        {
            "definition": "{тип данных}, способный содержать внутри себя множество однотипных элементов",
            "term": "Контейнерный тип данных"
        },
        {
            "definition": "{множество} конечных {формальных слов} над конечным {алфавитом}",
            "term": "Формальный язык"
        },
        {
            "definition": "неиконический знак, изображение, не имеющее видимого сходства с обозначаемой сущностью. Обладает {атомарностью}",
            "term": "Символ"
        },
        {
            "definition": "",
            "term": "Сущность"
        },
        {
            "definition": "",
            "term": "Свойство"
        },
        {
            "definition": "группа, совокупность некоторых {элементов}, объединенных некоторым {свойством}",
            "term": "Множество"
        },
        {
            "definition": "{сущность}",
            "term": "Элемент"
        },
        {
            "definition": "{множество}, в котором важен не только набор {элементов}, но и их порядок",
            "term": "Последовательность"
        },
        {
            "definition": "свойство {упорядоченного контейнера} означающее, что доступ к {элементам}  происходит только в заранее заданном порядке, тем дольше, чем дальше {элемент}  расположен от края в {контейнере}",
            "term": "Последовательный доступ"
        },
        {
            "definition": "область {памяти}, соответствующая определенному {типу данных}, с точки зрения {языка программирования}",
            "term": "Экземпляр"
        },
        {
            "definition": "{контейнерный тип данных}",
            "term": "Контейнер"
        },
        {
            "definition": "свойство {упорядоченного контейнера} означающее, что доступ к {элементам}  происходит за одинаковые промежутки времени, не зависящие от положения {элемента} в {контейнере}",
            "term": "Произвольный доступ"
        },
        {
            "definition": "{контейнер} в котором {элементы} хранятся в строгой {последовательности}",
            "term": "Упорядоченный контейнер"
        },
        {
            "definition": "Условная переменная которая может запустить поток после наступления события. {Примитив синхронизации}",
            "term": "condition_variable"
        },
        {
            "definition": "Вычислимый тип, который устанавливается в зависимости от платформы и выбирается по принципу возможности адресовать наибольший размер контейнера",
            "term": "size_t "
        },
        {
            "definition": "{Примитив синхронизации}",
            "term": "future"
        },
        {
            "definition": "{future}",
            "term": "std::shared_future"
        },
        {
            "definition": "{future} {многопоточные инструменты} в namespace {stl}",
            "description": "Создаёт отдельный поток, в качестве результата возвращает future",
            "term": "async"
        },
        {
            "definition": "{Примитив синхронизации} {future} {многопоточные инструменты} в namespace {stl}",
            "term": "promise"
        },
        {
            "definition": "{Конкуренция за ресурсы software}",
            "term": "Примитивы синхронизации"
        },
        {
            "definition": "{Примитив синхронизации} в namespace {stl}",
            "term": "mutex"
        },
        {
            "definition": " {часы}, ходящие с постояным {тактовым периодом} и не допускающие подведения. Более  позднее обращение к таким {часам} всегда вернёт больше значение, даже если системные часы подводили",
            "term": "Стабильные часы"
        },
        {
            "definition": "{Часы}, показывающие текущее системное время (может быть переведено)",
            "term": "Системные часы"
        },
        {
            "definition": "{Таймаут}, происходящий через определенное количество времени после начала",
            "examples": "Каждые 30 мс",
            "term": "Интервальный таймаут"
        },
        {
            "definition": "{Таймаут}, происходящий в определенный, заранее заданный абсолютным способом момент времени",
            "examples": "Таймаут в 17:30 20 февраля 2022 UTC +3 ",
            "term": "Абсолютный таймаут"
        },
        {
            "definition": "Событие, сообщающее об окончании какого либо временного интервала",
            "term": "Таймаут"
        },
        {
            "definition": "источник {данных} о {времени}",
            "term": "Часы"
        },
        {
            "definition": "Значение определяющее, как часто {часы} будут делать такт. Задается в виде числа долей секунды",
            "term": "Тактовый период"
        },
        {
            "definition": "Значение в прошлом от которого отсчитываются данные {часы}",
            "term": "Эпоха часов"
        },
        {
            "definition": "{функция} в {stl} возвращающая количество {времени} прошедшее с начала {эпохи часов}",
            "term": "time_since_epoch"
        },
        {
            "definition": "Рекурсивный вариант {mutex} в неймспейсе {stl}",
            "term": "recursive_mutex"
        },
        {
            "definition": "",
            "term": "std::type_info"
        },
        {
            "definition": "",
            "term": "Атомарные типы"
        },
        {
            "definition": "",
            "term": "Атомарные операции"
        },
        {
            "definition": "",
            "term": "Объект в смысле С++"
        },
        {
            "definition": "Функция, проверяющая, что {атомарный тип} истинно атомарен на уровне процессора, а не проэмулирован",
            "term": "is_lock_free"
        },
        {
            "definition": "",
            "term": "volatile"
        },
        {
            "definition": "",
            "term": "Copy on write"
        },
        {
            "definition": "",
            "term": "Perfect forwarding"
        },
        {
            "definition": "",
            "term": "Кэш дружелюбный код"
        },
        {
            "definition": "",
            "term": "PDS passive data structure"
        },
        {
            "definition": "",
            "term": "std::forward_list"
        },
        {
            "definition": "",
            "term": "Переопределение"
        },
        {
            "definition": "",
            "term": "Перегрузка"
        },
        {
            "definition": "Double ended queue",
            "term": "Deque"
        },
        {
            "definition": "",
            "term": "SFINAE"
        },
        {
            "definition": "{xvalue}, a temporary object or value that is not associated with object",
            "term": "rvalue"
        },
        {
            "definition": "function or object",
            "term": "lvalue"
        },
        {
            "definition": "expiring value, an object near the end of lifetime",
            "term": "xvalue"
        },
        {
            "definition": "{lvalue} or {xvalue}",
            "term": "glvalue"
        },
        {
            "definition": "{rvalue}, that is not {xvalue} (pure rvalue)",
            "term": "prvalue"
        },
        {
            "definition": "{named return value optimization}",
            "term": "NRVO"
        },
        {
            "definition": "{one definition rule}",
            "term": "ODR"
        },
        {
            "definition": "",
            "term": "ODR violation"
        },
        {
            "definition": "",
            "term": "nibloid"
        },
        {
            "definition": "",
            "term": "voldemort type"
        },
        {
            "definition": "",
            "term": "Инструментарий языка"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Ui фреймворк"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Пакетный менеджер"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Справка"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Статический анализатор"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Динамический анализатор"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Линтер"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Система сборки"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Ide"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Система контроля версий"
        },
        {
            "definition": "{Инструментарий языка}",
            "term": "Компилятор"
        },
        {
            "definition": "",
            "term": "Argument dependent lookup"
        },
        {
            "definition": "",
            "term": "Многопоточные инструменты"
        },
        {
            "definition": "{многопоточные инструменты} в namespace {stl}",
            "term": "thread"
        },
        {
            "definition": "",
            "term": "std::conditional_variable"
        },
        {
            "definition": "",
            "term": "Синхронизация параллельных операций"
        },
        {
            "definition": "",
            "term": "default_random_engine"
        },
        {
            "definition": "",
            "term": "uniform_int_distribution"
        },
        {
            "definition": "{Функциональное программирование}",
            "term": "Чистая функция"
        },
        {
            "definition": "{Функциональное программирование}",
            "term": "Lifting"
        },
        {
            "definition": "{Функциональное программирование}",
            "term": "Карринг"
        },
        {
            "definition": "{Функциональное программирование}",
            "term": "Function lifting"
        },
        {
            "definition": "",
            "term": "Функциональное программирование"
        },
        {
            "definition": "{оптимизация компилятора}",
            "term": "Named return value optimization"
        },
        {
            "definition": "",
            "term": "Оптимизация компилятора"
        },
        {
            "definition": "",
            "term": "Recoverable error"
        },
        {
            "definition": "",
            "term": "Error"
        },
        {
            "definition": "",
            "term": "Programming bug"
        },
        {
            "definition": "",
            "term": "Abstract machine corruption"
        },
        {
            "definition": "",
            "term": "Exceprtion"
        },
        {
            "definition": "",
            "term": "Error code"
        },
        {
            "definition": "",
            "term": "Pre contract"
        },
        {
            "definition": "",
            "term": "Post contract"
        },
        {
            "definition": "{ошибка} переполнения {стека вызовов}",
            "term": "Stack overflow"
        },
        {
            "definition": "",
            "term": "Heap overflow"
        },
        {
            "definition": "",
            "term": "Only runtime errors sould be reported to the calling code"
        },
        {
            "definition": "",
            "term": "Императивная парадигма"
        },
        {
            "definition": "",
            "term": "Объектно ориентированная парадигма"
        },
        {
            "definition": "",
            "term": "Функциональная парадигма"
        },
        {
            "definition": "",
            "term": "Декларативная парадигма"
        },
        {
            "definition": "",
            "term": "Модульность"
        },
        {
            "definition": "",
            "term": "Разделение ответственности"
        },
        {
            "definition": "",
            "term": "Solid"
        },
        {
            "definition": "",
            "term": "SOLID"
        },
        {
            "definition": "{экземпляр}, имеющий имя",
            "term": "Переменная"
        },
        {
            "definition": "",
            "term": "One definition rule"
        },
        {
            "definition": "последовательность {символов} {алфавита}",
            "term": "Формальное слово"
        },
        {
            "definition": "{язык программирования}",
            "term": "C++"
        },
        {
            "definition": "{экземпляр} {класса}",
            "term": "Объект"
        },
        {
            "definition": "",
            "term": "Время жизни"
        },
        {
            "definition": "{компьютерная память}",
            "term": "Память"
        },
        {
            "definition": "",
            "term": "Пользовательский тип данных"
        },
        {
            "definition": "",
            "term": "Функция"
        },
        {
            "definition": "стандартная {библиотека} {c++}",
            "term": "STL"
        },
        {
            "definition": "{stl}",
            "term": "Standard template library"
        },
        {
            "definition": "{last in first out}",
            "term": "LIFO"
        },
        {
            "definition": "свойство {упорядоченного контейнера} означающее, что доступ к {элементам}  происходит только с одной стороны контейнера, по принципу \"последний пришел, первый вышел\"",
            "term": "Last in first out доступ"
        },
        {
            "definition": "{стек}, хранящий информацию о вызванных {функциях}, состоянии их {аргументов} и {локальных переменных}",
            "term": "Стек вызовов"
        },
        {
            "definition": "",
            "term": "Ассоциативный контейнер"
        },
        {
            "definition": "{проблема параллелизма}",
            "term": "Корректность"
        },
        {
            "definition": "",
            "term": "проблема параллелизма"
        },
        {
            "definition": "{проблема параллелизма}",
            "term": "Производительность"
        },
        {
            "definition": "{проблема параллелизма}",
            "term": "Алгоритмы"
        },
        {
            "definition": "{проблема параллелизма}",
            "term": "Абстракции"
        },
        {
            "definition": "{корректность}",
            "term": "Data race"
        },
        {
            "definition": "{корректность}",
            "term": "Race condition"
        },
        {
            "definition": "{race condition}",
            "term": "Недостаточно строгий memory_order"
        },
        {
            "definition": "{race condition}",
            "term": "Проблема ABA"
        },
        {
            "definition": "{корректность} ",
            "term": "Priority inversion"
        },
        {
            "definition": "{корректность}",
            "term": "Deadlock"
        },
        {
            "definition": "{корректность}",
            "term": "Livelock"
        },
        {
            "definition": "{корректность}",
            "term": "Время жизни объектов"
        },
        {
            "definition": "",
            "term": "Fault injection"
        },
        {
            "definition": "",
            "term": "Fuzzing"
        },
        {
            "definition": "",
            "term": "Формальная верификация "
        },
        {
            "definition": "{производительность}",
            "term": "Конкуренция за ресурсы hardware"
        },
        {
            "definition": "{производительность}",
            "term": "Конкуренция за ресурсы software"
        },
        {
            "definition": "{Конкуренция за ресурсы hardware}",
            "term": "Ядра Cpu"
        },
        {
            "definition": "{Конкуренция за ресурсы hardware}",
            "term": "Caches"
        },
        {
            "definition": "{Конкуренция за ресурсы hardware}",
            "term": "Pages"
        },
        {
            "definition": "{Конкуренция за ресурсы software}",
            "term": "Планировщик ос"
        },
        {
            "definition": "{Конкуренция за ресурсы software}",
            "term": "Квант времени"
        },
        {
            "definition": "{Конкуренция за ресурсы software}",
            "term": "Аллокатор"
        },
        {
            "definition": "",
            "term": "Thread pool"
        },
        {
            "definition": "",
            "term": "Thread local arena"
        }
    ]
}
