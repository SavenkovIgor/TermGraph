name: Build app and deploy wasm to github pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  QT_VERSION: 6.4.1
  WASM_VERSION: 3.1.14
  QT_ROOT: ${{ github.workspace }}/Qt
  ACTIONS_STEP_DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}

jobs:
  build:
    permissions:
      id-token: write
      pages: write
    timeout-minutes: 120
    strategy:
      matrix:
        build_profile: [desktop_dev, desktop_release, wasm_release]

    concurrency:
      group: AppBuild-${{ github.workflow }}-${{ github.ref }}-${{ matrix.build_profile }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install Ninja
      run: sudo apt install ninja-build

    - name: Install Conan package manager
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: 'pip_requirements.txt'
    - run: pip install -r pip_requirements.txt

    - if: ${{ matrix.build_profile == 'wasm_release' }}
      name: Install Wasm
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: ${{ env.WASM_VERSION }}
        actions-cache-folder: 'emsdk-cache'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==2.1.*'
        version: ${{ env.QT_VERSION }}
        dir: ${{ github.workspace }}
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        modules: 'qtimageformats qt5compat qtshadertools'
        archives: 'qttranslations qttools qtsvg qtdeclarative qtbase icu'
        cache: true

    - if: ${{ matrix.build_profile == 'wasm_release' }}
      name: Cache Multithread qt wasm
      id: cache-mt-wasm
      uses: actions/cache@v3
      with:
        key: wasm_32_mt
        path: ${{ github.workspace }}/Qt/${{ env.QT_VERSION }}/wasm_32_mt

    - if: ${{ matrix.build_profile == 'wasm_release' && steps.cache-mt-wasm.outputs.cache-hit != 'true' }}
      name: Build multithread Qt wasm
      working-directory: ${{github.workspace}}/tools/build_qt_wasm/build
      run: ./build.sh

    - name: Conan install dependencies
      working-directory: ${{github.workspace}}/apps/TermGraphApp
      run: conan install . --profile conanfiles/profile/${{ matrix.build_profile }} --build=missing -if=build/${{ matrix.build_profile }}/conan-dependencies

    - name: CMake configure
      working-directory: ${{github.workspace}}/apps/TermGraphApp
      run: cmake --preset ${{ matrix.build_profile }} ./

    - name: Cmake build
      working-directory: ${{github.workspace}}/apps/TermGraphApp
      run: cmake --build --preset ${{ matrix.build_profile }}

    - if: ${{ matrix.build_profile != 'wasm_release' }}
      name: CTest
      working-directory: ${{github.workspace}}/apps/TermGraphApp
      run: ctest --preset ${{ matrix.build_profile }}

    # fix this section to it works only on push to main, not on pull_requests to main
    - if: ${{ matrix.build_profile == 'wasm_release' }}
      name: Upload artifact
      uses: actions/upload-pages-artifact@v1.0.7
      with:
        name: wasm_release
        path: ${{github.workspace}}/apps/TermGraphApp/build/wasm_release

    - if: ${{ matrix.build_profile == 'wasm_release' }}
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}

      id: deployment
      name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v1.2.3
