/*
 *  TermGraph, build graph of knowledge.
 *  Copyright © 2016-2019. Savenkov Igor. All rights reserved
 *  Contacts: dev.savenkovigor@protonmail.com
 *
 *  This file is part of TermGraph.
 *
 *  TermGraph is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  TermGraph is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with TermGraph. If not, see <https://www.gnu.org/licenses/>.
 */

import QtQuick 2.13
import QtQuick.Controls 2.13

import "../Molecules" as M
import "../Js/Sizes.js" as Sizes
import "../Js/Colors.js" as Colors

M.Page {
    id: root

    property var helpModel: [
        // Slide 1
        "Привет!<br/><br/>
        Спасибо, что установили приложение TermGraph.<br/>
        Надеюсь, что оно сможет быть вам полезным.<br/><br/>

        <b>Что такое TermGraph?</b><br/><br/>

        Цель приложения - помочь в структурировании ваших знаний.<br/>
        TermGraph работает по принципу, mind-map. Оно выстраивает термины в иерархическом порядке и
        отображает связи между ними.<br/>
        В результате вы получаете карту терминов, окинув взглядом которую, можно оценить сколько уже изучено,
        сколько еще примерно предстоит изучить, и получить представление о изученном материале в целом.<br/>
        Плюс, если вы вдруг возьмете паузу в обучении, на пару - тройку недель, когда вы к нему вернетесь,
        освежить знания и вспомнить важные определения будет ощутимо проще.<br/>",

        // Slide 2
        "<b>Как работать с приложением:</b><br/><br/>

        1) Необходимо создать группу терминов с каким нибудь названием, например <i>Геометрия</i>.<br/>
        2) Добавить в эту группу термины (кнопка + на основном экране).<br/>
        Например, давайте добавим определения <i>точки</i> и <i>прямой</i>:<br/><br/>

        <img width=" + getWidth() + " src=\"qrc:/point.png\"> <br/><br/>
        <img width=" + getWidth() + " src=\"qrc:/line.png\"> <br/><br/>
        В результате мы получим примерно такую схему: <br/><br/>
        <img width=" + getWidth() + " src=\"qrc:/graph1.png\"> <br/>

        3) Теперь давайте добавим немного связей.<br/>
        Допустим пусть будет термин <i>Отрезок</i>, который мы определим с помощью терминов
        <i>Точка</i> и <i>Прямая</i>:<br/>
        <img width=" + getWidth() + " src=\"qrc:/lineSegment.png\"> <br/><br/>
        Обратите внимание, что при написании определения мы выделили базовые термины
        (<i>точка</i> и <i>прямая</i>) фигурными скобками {} (их кстати можно добавить той круглой белой кнопкой).<br/>
        Если в каком-либо определении указаны такие скобки, то приложение будет пытаться найти термины с таким
        названием и нарисовать связь между ними. При этом не обязательно совпадение должно быть 100%. Приложение
        обычно хорошо справляется с разными окончаниями слов.<br/>
        И в результате мы получим такую схему: <br/><br/>
        <img width=" + getWidth() + " src=\"qrc:/graph2.png\"> <br/><br/>

        Важное уточнение: термины будут выстраиваться по горизонтали, постепенно усложняясь слева-направо -
        от простых, до специализированных.<br/><br/>

        При построении диаграммы постоянно приходится решать, как термины должны быть связаны.
        Это удобно делать с помощью, например, такого вопроса:<br/>
        <i>Можно ли просто объяснить этот термин без привлечения других терминов?</i><br/>
        Очень часто в определениях сложных терминов, явно присутствуют более простые, базовые термины.<br/><br/>

        Построенная диаграмма в идеале должна давать очень точный ответ на такие вопросы: <br/>
        <i>С помощью каких терминов можно наиболее просто объяснить этот термин?</i><br/>
        <i>Сколько других терминов нужно еще узнать, чтобы понять смысл этого термина?</i><br/>",

        // Slide 3
        "Давайте добавим еще один термин: <i>Треугольник</i><br/><br/>
        <img width=" + getWidth() + " src=\"qrc:/triangle.png\"> <br/><br/>
        И в итоге получим такую схему:<br/><br/>
        <img width=" + getWidth() + " src=\"qrc:/graph3.png\"> <br/><br/>
        Обратите внимание, что была добавлена только одна связь между <i>треугольником</i> и <i>прямой</i>, хотя
        в определении треугольника выделено целых 4 термина. Связи к определениям <i>прямой</i>
        и <i>точки</i> не были добавлены потому что эти связи уже есть у <i>отрезка</i>.
        Предполагается что если вы знаете что такое <i>отрезок</i>, то вы автоматом уже знаете что такое
        <i>прямая</i> и <i>точка</i>. Поэтому для того чтобы понять что такое треугольник,
        достаточно ссылки только на отрезок. <br/>
        Эти связи были убраны на пост-обработке схемы, чтобы не захламлять ее.<br/>
        Также в определении треугольника есть упоминание термина {Геометрическая фигура},
        но поскольку на схеме нет такого термина, то связь не к чему строить.
        Когда термин <i>Геометрическая фигура</i> добавится, связь сразу появится.",

        // Slide 4
        "Замечания:<br/><br/>

        1) Осторожно! Может вызывать иллюзию знания. Помните, что реальное знание включает в себя не только
        владение терминологией, но также, как минимум, способности решать типовые задачи, и делать правильные
        предсказания развития событий в типовых ситуациях, и пр.<br/>
        2) Приложение в большинстве случаев прощает расхождения в окончаниях слов и регистре символов
        при поиске связей между определениями и терминами.<br/>
        3) Циклическая связность терминов будет подсвечена красным - предполагается что это ошибка и
        такие связи в идеале должны отсутствовать.<br/>
        4) Цвета терминов на схеме обозначают следующее: <i>синий</i> - несвязанная вершина,
        <i>красный</i> - корневой термин (он не зависит ни от каких других терминов),
        <i>зеленый</i> - обычный термин в схеме<br/>
        5) Не стоит излишне сосредотачиваться на \"идеальности\" определений, которые вы даете. Помните, что
        реальная вселенная состоит из огромного количества атомов и поэтому любое словесное описание этой махины
        почти наверняка будет лишь приближением.",

        // Slide 5
        "От автора:<br/><br/>

        Лично мне это приложение очень помогает структурировать знания по ходу изучения.
        Становится понятно, что от чего зависит. Использовал при изучении клеточной биологии, потому
        что там много терминов и все их за раз охватить проблематично, а постоянно возвращаться к ним по
        книге утомительно.<br/><br/>
        Я думаю, что на данный момент это приложение лучше всего подойдет для
        точных наук, в которых много связных друг с другом определений например математика, физика,
        химия и пр.<br/><br/>

        В дальнейшем приложение будет развиваться именно в ключе условного \"блокнота\" который имеет
        представление о твоих знаниях, помогает их хранить, заучивать и всячески поддерживать
        актуальными.<br/><br/>

        В общем все. Удачи в обучении)"
    ]

    function getWidth() {
        return root.width * 0.6;
    }

    title: "Справка"
    padding: 0

    contentItem: Item {
        SwipeView {
            id: swipeView
            anchors.fill: parent

            Repeater {
                model: root.helpModel
                delegate: M.HelpCard { text: modelData }
            }
        }

        PageIndicator {
            id: pageIndicator

            count: swipeView.count
            currentIndex: swipeView.currentIndex

            anchors.bottom: swipeView.bottom
            anchors.horizontalCenter: parent.horizontalCenter

            delegate: Item {
                width: pin.width * 1.5
                height: pin.height * 1.5
                Rectangle {
                    id: pin
                    width: Sizes.baseR75 * 0.75
                    height: width
                    anchors.centerIn: parent
                    radius: width / 2
                    color: index === pageIndicator.currentIndex ? Colors.baseLight2 : Colors.black
                }
            }
        }
    }
}
